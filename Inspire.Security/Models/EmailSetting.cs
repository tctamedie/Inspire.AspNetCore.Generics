
namespace Inspire.Security.Models
{
    using System;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    public partial class EmailSetting: MakerChecker<int>
    {
        
        [StringLength(50)]
        public string SMTPServer { get; set; }
        [StringLength(50)]
        public string SenderUsername { get; set; }
        [StringLength(100)]
        [RegularExpression(@"\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*", ErrorMessage = "The Email Address entered is not valid")]
        public string SenderEmail { get; set; }
        [StringLength(500)]
        public string SenderPassword { get; set; }
        public bool EnableClientPort { get; set; }
        public int ClientPortNo { get; set; }
        public bool EnableSSL { get; set; }
        
    }
    public class EmailQueue
    {
        //[Key       
        public int Id { get; set; }
        //[Column(TypeName = "varchar(MAX)")]
        public string To { get; set; }
        //[Column(TypeName = "varchar(MAX)")]
        public string CarbonCopy { get; set; }
        //[Column(TypeName = "varchar(MAX)")]
        public string BlindCarbonCopy { get; set; }
        public string Subject { get; set; }
        //[Column(TypeName ="varchar(MAX)")]
        public string EmailBody { get; set; }
        public int Recurrence { get; set; }
        public int SentCount { get; set; }
        public string MailingGroupId { get; set; }
        public MailingGroup MailingGroup { get; set; }

    }
    public class Email
    {
        public string Salutation { get; set; }
        public string Reciever { get; set; }
        public string Notified { get; set; }
        public string BlindCopies { get; set; }
        public string Subject { get; set; }
        public string Signature { get; set; }
        public string Message { get; set; }
        public string MailingGroupId { get; set; }
    }
    public class RecipientEmail
    {
        public string EmailAddress { get; set; }
        public string Name { get; set; }
    }
    [EntityConfiguration("MailingGroups", "SystemSecurity", "Mailing Groups", "Mailing Group")]
    public class MailingGroup : ToggableStandard<string>
    {
        public string SenderName { get; set; }
        public string SenderEmail { get; set; }
        public string SenderPassword { get; set; }
        public string ExchangeServerId { get; set; }
        [ForeignKey("ExchangeServerId")]
        public EmailConfiguration EmailConfiguration { get; set; }
        [Link("MailingLists", LinkButtonIcon: "fa fa-wrench", LinkButtonClass: "btn btn-default btn-xs btn-warning")]
        public List<MailingList> MailingLists { get; set; }
        [Link("EmailQueues", LinkButtonIcon: "fa fa-mail", LinkButtonClass: "btn btn-default btn-success")]
        public List<EmailQueue> EmailQueues { get; set; }
    }
    [FormConfiguration("MailingGroups", "SystemSecurity", "Mailing Groups", "Mailing Group")]
    public class MailingGroupDto : ToggableStandardDto<string>
    {
        [Field(1, 2)]
        public string SenderName { get; set; }
        [Field(2, 2)]
        public string SenderEmail { get; set; }
        [Field(1, 3, controlType: ControlType.Password)]
        public string SenderPassword { get; set; }
        [Field(2, 3)]
        [List("EmailConfigurations")]
        public string SmtpServer { get; set; }

    }
    public enum CopyType
    {
        None = 0,
        Blind,
        Carbon
    }
    [EntityConfiguration("MailingLists", "SystemSecurity", "Mailing Lists", "Mailing List")]
    [BreadCrumb(1, "MailingGroups", "SystemSecurity", "Groups")]

    public class MailingList : ToggableMakerChecker<int>
    {
        public string MailingGroupId { get; set; }
        [TableColumn(order: 2)]
        public string EmployeeCode { get; set; }        
        [TableColumn(order: 4, displayName: "Email")]
        public string EmailAddress { get; set; }
        public CopyType CopyTypeId { get; set; }        
        [ForeignKey("MailingGroupId")]
        public MailingGroup MailingGroup { get; set; }
    }
    [FormConfiguration("MailingLists", "SystemSecurity", "Mailing Lists", "Mailing List")]
    public class MailingListDto : ToggableMakerCheckerDto<int>
    {
        [Field(1, 1, autogenerated: true, isKey: true)]
        public override int Id { get; set; }
        [Field(1, 0, controlType: ControlType.Hidden)]
        public string MailingGroupId { get; set; }
        [Field(2, 1, displayName: "Employee")]
        [List("Employees", Area: "EmployeeManagement", Action: "GetActiveEmployees")]
        public string EmployeeCode { get; set; }
        [Field(1, 2)]
        public string EmailAddress { get; set; }
        [Field(1, 2)]
        [List(Action: "BooleanList")]
        public bool BlindCopy { get; set; }


    }

    [FormConfiguration("UserMailingLists", "SystemSecurity", "User Mailing Lists", "User Mailing List")]
    public class UserMailingListDto : ToggableMakerCheckerDto<int>
    {
        [Field(1, 1, controlType: ControlType.Hidden, isKey: true)]
        public override int Id { get; set; }

        [Field(1, 1, displayName: "Group")]
        [List("MailingGroups")]
        public string MailingGroupId { get; set; }
        [Field(1, 0, controlType: ControlType.Hidden)]
        public string EmployeeCode { get; set; }
        [Field(1, 2, controlType: ControlType.Hidden)]
        public string EmailAddress { get; set; }
        [Field(2, 1)]
        [List(Action: "BooleanList")]
        public bool BlindCopy { get; set; }


    }
}

