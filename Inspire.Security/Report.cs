


using System.ComponentModel.DataAnnotations.Schema;

namespace Inspire.Security
{
    public class Report: Standard<string>
    {
        public Report()
        {  
        }
        public string SubMenuID { get; set; }        
        public string ReportFileName { get; set; }
        public string ReportUIModel { get; set; }
        [ForeignKey("SubMenuID")]
        public SubMenu SubMenu { get; set; }
        public bool Active { get; set; }
        

    }
    public class ReportDto: StandardDto<string>
    {
        
        public override string Name { get => base.Name; set => base.Name = value; }
        public override string Id { get; set; }        
        public string SubMenuID { get; set; }
              
        public string ReportFileName { get; set; }        
        public bool Active { get; set; }
        public string ReportUIModel { get; set; }
    }
    public class ReportParameter
    {
        public string ID { get; set; }
        public int Order { get; set; }
        public string Label { get; set; }
        public int Grids { get; set; }
        public string ReportID { get; set; }
        public string InputFieldID { get; set; }
        public Report Report { get; set; }
        public InputField InputField { get; set; }
    }
    public class InputField
    {
        public string Label { get; set; }
        public string Type { get; set; }
        public string DataType { get; set; }
        public bool Autogenerated { get; set; }
        public bool Hidden { get; set; }
        public string ID { get; set; }
        public bool IsDate { get; set; }
        public bool IsDropDown { get; set; }
        public string Controller { get; set; }
        public string Action { get; set; }
        public string TextField { get; set; }
        public string SortField { get; set; }
        public string ValueField { get; set; }
        public string Area { get; set; }
        public bool MultpleSelect { get; set; }
        public string OnSelectedChange { get; set; }
        public string OnField { get; set; }
        public string DefaultValue { get; set; }
        public string AllowedValue { get; set; }
        public string FilterColumn { get; set; }
        public string FilterValue { get; set; }
        public string TabID { get; set; }
        public int? MinimumLength { get; set; }
        public int? MaximumLength { get; set; }
        public bool IsRequired { get; set; }
        

    }
    
}
