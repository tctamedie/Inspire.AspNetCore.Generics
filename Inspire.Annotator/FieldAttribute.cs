namespace Inspire.Annotator.Annotations
{
    public class FieldAttribute: EntityAttribute
    {
        /// <summary>
        /// Sets Attributes that manage generation of html input field 
        /// </summary>
        /// <param name="order"> the position of the field within the row</param>
        /// <param name="row"> the row within which user interface field is located</param>
        /// <param name="id"> the identifier for the field</param>
        /// <param name="displayName"> the label for the field, if left blank the id will be used as label</param>
        /// <param name="isKey">sets whether this field will hold primary key for the entity, false if left blank </param>
        /// <param name="width">bootstrap grid system's number of columns to span</param>
        /// <param name="autogenerated"> true if user will not be required to enter input otherwise leave it blank</param>
        /// <param name="controlType">is this a hidden field on not and other aspects like file input type etc</param>
        /// <param name="tabId"> if there are tabs the set this to the id of the tab where the field should belong</param>
        public FieldAttribute(int order, int row, [CallerMemberName] string id = "", string displayName = "", bool isKey = false, int width = 6, bool autogenerated = false, ControlType controlType = ControlType.Text, string tabId="", bool isRequired = false) : base(id, displayName, order, isKey, width)
        {
            Row = row;
            Type = controlType.ToString().ToLower();
            Autogenerated = autogenerated;
            TabId = tabId;
            IsRequired = isRequired;
        }
        public int Row { get; }
        public bool Autogenerated { get; }
        public string TabId { get; }
        public string Type { get; }
        public bool IsRequired { get; }

    }
}
